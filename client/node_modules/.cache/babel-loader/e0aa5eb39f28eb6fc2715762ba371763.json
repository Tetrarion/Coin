{"ast":null,"code":"import * as actions from './actionTypes';\nimport getInfo from '../API/api';\nexport const addCoin = data => ({\n  type: actions.COIN_ADD,\n  payload: {\n    name: data.response.name,\n    count: data.count,\n    priceUsd: data.response.priceUsd,\n    coinTotalPrice: data.coinTotalPrice,\n    key: data.response.id\n  }\n});\nexport const removeCoin = id => ({\n  type: actions.COIN_REMOVE,\n  payload: {\n    id\n  }\n});\nexport const loadCoin = (id, count, message) => async dispatch => {\n  if (count === 0 || !count.isNaN || count < 0) return;\n  message.classList.remove('message--hidden');\n  setTimeout(() => message.classList.add('message--hidden'), 3000);\n  const response = await getInfo(`assets/${id}`);\n  const coinTotalPrice = response.priceUsd * count;\n  dispatch(addCoin({\n    response,\n    count,\n    coinTotalPrice\n  }));\n};","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/actions.js"],"names":["actions","getInfo","addCoin","data","type","COIN_ADD","payload","name","response","count","priceUsd","coinTotalPrice","key","id","removeCoin","COIN_REMOVE","loadCoin","message","dispatch","isNaN","classList","remove","setTimeout","add"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEJ,OAAO,CAACK,QADkB;AAEhCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEJ,IAAI,CAACK,QAAL,CAAcD,IADb;AAEPE,IAAAA,KAAK,EAAEN,IAAI,CAACM,KAFL;AAGPC,IAAAA,QAAQ,EAAEP,IAAI,CAACK,QAAL,CAAcE,QAHjB;AAIPC,IAAAA,cAAc,EAAER,IAAI,CAACQ,cAJd;AAKPC,IAAAA,GAAG,EAAET,IAAI,CAACK,QAAL,CAAcK;AALZ;AAFuB,CAAX,CAAhB;AAUP,OAAO,MAAMC,UAAU,GAAID,EAAD,KAAS;AACjCT,EAAAA,IAAI,EAAEJ,OAAO,CAACe,WADmB;AAEjCT,EAAAA,OAAO,EAAE;AAAEO,IAAAA;AAAF;AAFwB,CAAT,CAAnB;AAIP,OAAO,MAAMG,QAAQ,GAAG,CAACH,EAAD,EAAKJ,KAAL,EAAYQ,OAAZ,KAAwB,MAAOC,QAAP,IAAoB;AAClE,MAAIT,KAAK,KAAK,CAAV,IAAe,CAAEA,KAAK,CAACU,KAAvB,IAAiCV,KAAK,GAAG,CAA7C,EAAgD;AAChDQ,EAAAA,OAAO,CAACG,SAAR,CAAkBC,MAAlB,CAAyB,iBAAzB;AACAC,EAAAA,UAAU,CAAC,MAAML,OAAO,CAACG,SAAR,CAAkBG,GAAlB,CAAsB,iBAAtB,CAAP,EAAiD,IAAjD,CAAV;AACA,QAAMf,QAAQ,GAAG,MAAMP,OAAO,CAAE,UAASY,EAAG,EAAd,CAA9B;AACA,QAAMF,cAAc,GAAGH,QAAQ,CAACE,QAAT,GAAoBD,KAA3C;AACAS,EAAAA,QAAQ,CAAChB,OAAO,CAAC;AACfM,IAAAA,QADe;AAEfC,IAAAA,KAFe;AAGfE,IAAAA;AAHe,GAAD,CAAR,CAAR;AAKD,CAXM","sourcesContent":["import * as actions from './actionTypes';\r\nimport getInfo from '../API/api';\r\n\r\nexport const addCoin = (data) => ({\r\n  type: actions.COIN_ADD,\r\n  payload: {\r\n    name: data.response.name,\r\n    count: data.count,\r\n    priceUsd: data.response.priceUsd,\r\n    coinTotalPrice: data.coinTotalPrice,\r\n    key: data.response.id,\r\n  },\r\n});\r\nexport const removeCoin = (id) => ({\r\n  type: actions.COIN_REMOVE,\r\n  payload: { id },\r\n});\r\nexport const loadCoin = (id, count, message) => async (dispatch) => {\r\n  if (count === 0 || !(count.isNaN) || count < 0) return;\r\n  message.classList.remove('message--hidden');\r\n  setTimeout(() => message.classList.add('message--hidden'), 3000);\r\n  const response = await getInfo(`assets/${id}`);\r\n  const coinTotalPrice = response.priceUsd * count;\r\n  dispatch(addCoin({\r\n    response,\r\n    count,\r\n    coinTotalPrice,\r\n  }));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}