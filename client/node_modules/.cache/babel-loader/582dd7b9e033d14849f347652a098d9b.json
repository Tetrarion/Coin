{"ast":null,"code":"import * as actions from './actionTypes';\nlet lastId = 0;\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.COIN_ADD:\n      return [...state, {\n        id: ++lastId,\n        name: action.payload.name,\n        count: action.payload.count,\n        priceUsd: action.payload.priceUsd,\n        totalpriceUsd: action.title.totalpriceUsd,\n        key: action.payload.key\n      }];\n\n    case actions.COIN_REMOVE:\n      {\n        return state.filter(task => action.payload.id !== task.id);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/reducer.jsx"],"names":["actions","lastId","reducer","state","action","type","COIN_ADD","id","name","payload","count","priceUsd","totalpriceUsd","title","key","COIN_REMOVE","filter","task"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AAEA,IAAIC,MAAM,GAAG,CAAb;AAEA,eAAe,SAASC,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,OAAO,CAACM,QAAb;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAW;AAChBI,QAAAA,EAAE,EAAE,EAAEN,MADU;AAEhBO,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeD,IAFL;AAGhBE,QAAAA,KAAK,EAAEN,MAAM,CAACK,OAAP,CAAeC,KAHN;AAIhBC,QAAAA,QAAQ,EAAEP,MAAM,CAACK,OAAP,CAAeE,QAJT;AAKhBC,QAAAA,aAAa,EAAER,MAAM,CAACS,KAAP,CAAaD,aALZ;AAMhBE,QAAAA,GAAG,EAAEV,MAAM,CAACK,OAAP,CAAeK;AANJ,OAAX,CAAP;;AAQF,SAAKd,OAAO,CAACe,WAAb;AAA0B;AACxB,eAAOZ,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIb,MAAM,CAACK,OAAP,CAAeF,EAAf,KAAsBU,IAAI,CAACV,EAAhD,CAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AAdJ;AAgBD","sourcesContent":["import * as actions from './actionTypes';\r\n\r\nlet lastId = 0;\r\n\r\nexport default function reducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actions.COIN_ADD: \r\n      return [...state, {\r\n        id: ++lastId,\r\n        name: action.payload.name,\r\n        count: action.payload.count,\r\n        priceUsd: action.payload.priceUsd,\r\n        totalpriceUsd: action.title.totalpriceUsd,\r\n        key: action.payload.key\r\n      }];\r\n    case actions.COIN_REMOVE: {\r\n      return state.filter(task => action.payload.id !== task.id);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}