{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ListPage from './Main/LitsPage/CoinsPage';\nimport { StorePage } from './Main/BasketPage/StorePage';\nimport InfoPage from './Main/InfoPage/InfoPage';\nimport Header from './Header/Header';\nimport Message from './Message';\nimport { GET_RATE } from './query/rates';\nimport { GET_CURRENT_COINS } from './query/coins';\nimport './Styles/styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  id: 'united-states-dollar',\n  value: 1,\n  symbol: '$'\n};\n\nfunction App() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [coinsPerPage, setCoinsPerPage] = useState(10);\n  const [rateId, setRateId] = useState('');\n  const [rate, setRate] = useState(initialState);\n  const {\n    data\n  } = useQuery(GET_RATE, {\n    variables: {\n      id: rateId\n    }\n  });\n  const {\n    loading: loadingCurrentCoins,\n    data: currentCoins\n  } = useQuery(GET_CURRENT_COINS, {\n    variables: {\n      firstIndex: 0,\n      coinsPrePage: 4\n    }\n  });\n  const tasks = useSelector(state => state);\n  console.log(data);\n  useEffect(() => {\n    const getCoins = async () => {\n      if (!loadingCurrentCoins) setCoins(currentCoins.getCurrentCoins);\n      setTimeout(getCoins, 10000);\n    };\n\n    getCoins();\n  }, []);\n  useEffect(() => {\n    const getRate = async () => {\n      if (rateId) {\n        const response = data.getRate;\n\n        if (response) {\n          setRate({\n            id: response.id,\n            value: response.rateUsd,\n            symbol: response.currencySymbol\n          });\n        }\n      }\n    };\n\n    getRate();\n  }, [rateId]);\n\n  const search = text => setSearchText(text);\n\n  const takeCoinsPerPage = number => setCoinsPerPage(number);\n\n  const getRateId = id => setRateId(id);\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      coins: coins,\n      rate: rate,\n      tasks: tasks,\n      search: search,\n      takeCoinsPerPage: takeCoinsPerPage,\n      getRateId: getRateId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(ListPage, {\n          searchText: searchText,\n          coinsPerPage: coinsPerPage,\n          rate: rate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/storepage\",\n        element: /*#__PURE__*/_jsxDEV(StorePage, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/infopage/:id\",\n        element: /*#__PURE__*/_jsxDEV(InfoPage, {\n          rate: rate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DmNf6+JWXnBr8n13nAK2qdUe+So=\", false, function () {\n  return [useQuery, useQuery, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/client/src/App.jsx"],"names":["useEffect","useState","useQuery","BrowserRouter","Routes","Route","useSelector","ListPage","StorePage","InfoPage","Header","Message","GET_RATE","GET_CURRENT_COINS","initialState","id","value","symbol","App","coins","setCoins","searchText","setSearchText","coinsPerPage","setCoinsPerPage","rateId","setRateId","rate","setRate","data","variables","loading","loadingCurrentCoins","currentCoins","firstIndex","coinsPrePage","tasks","state","console","log","getCoins","getCurrentCoins","setTimeout","getRate","response","rateUsd","currencySymbol","search","text","takeCoinsPerPage","number","getRateId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAO,sBAAP;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,sBADe;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAACa,YAAD,CAAhC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAW3B,QAAQ,CAACU,QAAD,EAAW;AAClCkB,IAAAA,SAAS,EAAE;AACTf,MAAAA,EAAE,EAAEU;AADK;AADuB,GAAX,CAAzB;AAKA,QAAM;AAAEM,IAAAA,OAAO,EAAEC,mBAAX;AAAgCH,IAAAA,IAAI,EAAEI;AAAtC,MAAuD/B,QAAQ,CAACW,iBAAD,EAAoB;AACvFiB,IAAAA,SAAS,EAAE;AACTI,MAAAA,UAAU,EAAE,CADH;AAETC,MAAAA,YAAY,EAAE;AAFL;AAD4E,GAApB,CAArE;AAOA,QAAMC,KAAK,GAAG9B,WAAW,CAAE+B,KAAD,IAAWA,KAAZ,CAAzB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwC,QAAQ,GAAG,YAAY;AAC3B,UAAI,CAACR,mBAAL,EAA0BZ,QAAQ,CAACa,YAAY,CAACQ,eAAd,CAAR;AAC1BC,MAAAA,UAAU,CAACF,QAAD,EAAW,KAAX,CAAV;AACD,KAHD;;AAIAA,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;AAQAxC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2C,OAAO,GAAG,YAAY;AAC1B,UAAIlB,MAAJ,EAAY;AACV,cAAMmB,QAAQ,GAAGf,IAAI,CAACc,OAAtB;;AACA,YAAIC,QAAJ,EAAc;AACZhB,UAAAA,OAAO,CAAC;AACNb,YAAAA,EAAE,EAAE6B,QAAQ,CAAC7B,EADP;AAENC,YAAAA,KAAK,EAAE4B,QAAQ,CAACC,OAFV;AAGN5B,YAAAA,MAAM,EAAE2B,QAAQ,CAACE;AAHX,WAAD,CAAP;AAKD;AACF;AACF,KAXD;;AAYAH,IAAAA,OAAO;AACR,GAdQ,EAcN,CAAClB,MAAD,CAdM,CAAT;;AAgBA,QAAMsB,MAAM,GAAIC,IAAD,IAAU1B,aAAa,CAAC0B,IAAD,CAAtC;;AAEA,QAAMC,gBAAgB,GAAIC,MAAD,IAAY1B,eAAe,CAAC0B,MAAD,CAApD;;AAEA,QAAMC,SAAS,GAAIpC,EAAD,IAAQW,SAAS,CAACX,EAAD,CAAnC;;AAEA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEI,KAAf;AAAsB,MAAA,IAAI,EAAEQ,IAA5B;AAAkC,MAAA,KAAK,EAAES,KAAzC;AAAgD,MAAA,MAAM,EAAEW,MAAxD;AAAgE,MAAA,gBAAgB,EAAEE,gBAAlF;AAAoG,MAAA,SAAS,EAAEE;AAA/G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,UAAU,EAAE9B,UAAtB;AAAkC,UAAA,YAAY,EAAEE,YAAhD;AAA8D,UAAA,IAAI,EAAEI;AAApE;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,OAAO,eAAE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAES;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,eAAZ;AAA4B,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAET;AAAhB;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhEQT,G;UAMUhB,Q,EAK4CA,Q,EAO/CI,W;;;KAlBPY,G;AAkET,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport ListPage from './Main/LitsPage/CoinsPage';\r\nimport { StorePage } from './Main/BasketPage/StorePage';\r\nimport InfoPage from './Main/InfoPage/InfoPage';\r\nimport Header from './Header/Header';\r\nimport Message from './Message';\r\nimport { GET_RATE } from './query/rates';\r\nimport { GET_CURRENT_COINS } from './query/coins';\r\nimport './Styles/styles.scss';\r\n\r\nconst initialState = {\r\n  id: 'united-states-dollar',\r\n  value: 1,\r\n  symbol: '$',\r\n};\r\n\r\nfunction App() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [coinsPerPage, setCoinsPerPage] = useState(10);\r\n  const [rateId, setRateId] = useState('');\r\n  const [rate, setRate] = useState(initialState);\r\n  const { data } = useQuery(GET_RATE, {\r\n    variables: {\r\n      id: rateId,\r\n    },\r\n  });\r\n  const { loading: loadingCurrentCoins, data: currentCoins } = useQuery(GET_CURRENT_COINS, {\r\n    variables: {\r\n      firstIndex: 0,\r\n      coinsPrePage: 4,\r\n    },\r\n  });\r\n\r\n  const tasks = useSelector((state) => state);\r\n\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    const getCoins = async () => {\r\n      if (!loadingCurrentCoins) setCoins(currentCoins.getCurrentCoins);\r\n      setTimeout(getCoins, 10000);\r\n    };\r\n    getCoins();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getRate = async () => {\r\n      if (rateId) {\r\n        const response = data.getRate;\r\n        if (response) {\r\n          setRate({\r\n            id: response.id,\r\n            value: response.rateUsd,\r\n            symbol: response.currencySymbol,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    getRate();\r\n  }, [rateId]);\r\n\r\n  const search = (text) => setSearchText(text);\r\n\r\n  const takeCoinsPerPage = (number) => setCoinsPerPage(number);\r\n\r\n  const getRateId = (id) => setRateId(id);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header coins={coins} rate={rate} tasks={tasks} search={search} takeCoinsPerPage={takeCoinsPerPage} getRateId={getRateId} />\r\n      <Routes>\r\n        <Route path=\"/*\" element={<ListPage searchText={searchText} coinsPerPage={coinsPerPage} rate={rate} />} />\r\n        <Route path=\"/storepage\" element={<StorePage tasks={tasks} />} />\r\n        <Route path=\"/infopage/:id\" element={<InfoPage rate={rate} />} />\r\n      </Routes>\r\n      <Message />\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}