{"ast":null,"code":"import * as actions from './actionTypes';\nexport default function reducer(action) {\n  let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!action) return state;\n\n  switch (action.type) {\n    case actions.COIN_ADD:\n      return [...state, {\n        name: action.payload.name,\n        count: action.payload.count,\n        priceUsd: action.payload.priceUsd,\n        totalpriceUsd: action.payload.totalpriceUsd,\n        key: action.payload.key\n      }];\n\n    case actions.COIN_REMOVE:\n      {\n        return state.filter(task => action.payload.key !== task.key);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/reducer.js"],"names":["actions","reducer","action","state","type","COIN_ADD","name","payload","count","priceUsd","totalpriceUsd","key","COIN_REMOVE","filter","task"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AAEA,eAAe,SAASC,OAAT,CAAiBC,MAAjB,EAAqC;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAClD,MAAI,CAACD,MAAL,EAAa,OAAOC,KAAP;;AACb,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKJ,OAAO,CAACK,QAAb;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAW;AAChBG,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeD,IADL;AAEhBE,QAAAA,KAAK,EAAEN,MAAM,CAACK,OAAP,CAAeC,KAFN;AAGhBC,QAAAA,QAAQ,EAAEP,MAAM,CAACK,OAAP,CAAeE,QAHT;AAIhBC,QAAAA,aAAa,EAAER,MAAM,CAACK,OAAP,CAAeG,aAJd;AAKhBC,QAAAA,GAAG,EAAET,MAAM,CAACK,OAAP,CAAeI;AALJ,OAAX,CAAP;;AAOF,SAAKX,OAAO,CAACY,WAAb;AAA0B;AACxB,eAAOT,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAUZ,MAAM,CAACK,OAAP,CAAeI,GAAf,KAAuBG,IAAI,CAACH,GAAnD,CAAP;AACD;;AACD;AACE,aAAOR,KAAP;AAbJ;AAeD","sourcesContent":["import * as actions from './actionTypes';\r\n\r\nexport default function reducer(action, state = []) {\r\n  if (!action) return state;\r\n  switch (action.type) {\r\n    case actions.COIN_ADD:\r\n      return [...state, {\r\n        name: action.payload.name,\r\n        count: action.payload.count,\r\n        priceUsd: action.payload.priceUsd,\r\n        totalpriceUsd: action.payload.totalpriceUsd,\r\n        key: action.payload.key,\r\n      }];\r\n    case actions.COIN_REMOVE: {\r\n      return state.filter((task) => action.payload.key !== task.key);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}