{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.coincap.io/v2/'\n}); // axiosInstance.interceptors.response.use((response) => {\n//   let truncatedArray = [];\n//   if (response.data.data.length < 365 && response.data.data.length > 100) {\n//     truncatedArray = response.data.data.map((dateinfo) => {\n//       const container = {};\n//       container.priceUsd = dateinfo.priceUsd;\n//       container.date = dateinfo.date.substr(0, 10);\n//       return container;\n//     });\n//     return truncatedArray;\n//   } if (response.data.data.length > 365) {\n//     truncatedArray = response.data.data.map((dateinfo) => {\n//       const container = {};\n//       container.priceUsd = dateinfo.priceUsd;\n//       container.date = dateinfo.date.substr(0, 10);\n//       return container;\n//     });\n//     return truncatedArray;\n//   }\n//   return response;\n// });\n\nexport default axiosInstance;","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/API/axiosInstance.js"],"names":["axios","axiosInstance","create","baseURL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAE;AADwB,CAAb,CAAtB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,aAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://api.coincap.io/v2/',\r\n});\r\n\r\n// axiosInstance.interceptors.response.use((response) => {\r\n//   let truncatedArray = [];\r\n//   if (response.data.data.length < 365 && response.data.data.length > 100) {\r\n//     truncatedArray = response.data.data.map((dateinfo) => {\r\n//       const container = {};\r\n//       container.priceUsd = dateinfo.priceUsd;\r\n//       container.date = dateinfo.date.substr(0, 10);\r\n//       return container;\r\n//     });\r\n//     return truncatedArray;\r\n//   } if (response.data.data.length > 365) {\r\n//     truncatedArray = response.data.data.map((dateinfo) => {\r\n//       const container = {};\r\n//       container.priceUsd = dateinfo.priceUsd;\r\n//       container.date = dateinfo.date.substr(0, 10);\r\n//       return container;\r\n//     });\r\n//     return truncatedArray;\r\n//   }\r\n//   return response;\r\n// });\r\n\r\nexport default axiosInstance;\r\n"]},"metadata":{},"sourceType":"module"}