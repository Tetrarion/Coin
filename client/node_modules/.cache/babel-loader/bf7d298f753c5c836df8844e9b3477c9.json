{"ast":null,"code":"import * as actions from './actionTypes'; // eslint-disable-next-line default-param-last\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.COIN_ADD:\n      return [...state, {\n        id: Math.random(),\n        name: action.payload.name,\n        symbol: action.payload.symbol,\n        count: action.payload.count,\n        price: action.payload.price,\n        coinTotalPrice: action.payload.coinTotalPrice,\n        key: action.payload.key\n      }];\n\n    case actions.COIN_REMOVE:\n      {\n        return state.filter(task => action.payload.id !== task.id);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/reducer.js"],"names":["actions","reducer","state","action","type","COIN_ADD","id","Math","random","name","payload","symbol","count","price","coinTotalPrice","key","COIN_REMOVE","filter","task"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB,C,CAEA;;AACA,eAAe,SAASC,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAO,CAACK,QAAb;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAW;AAChBI,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADY;AAEhBC,QAAAA,IAAI,EAAEN,MAAM,CAACO,OAAP,CAAeD,IAFL;AAGhBE,QAAAA,MAAM,EAAER,MAAM,CAACO,OAAP,CAAeC,MAHP;AAIhBC,QAAAA,KAAK,EAAET,MAAM,CAACO,OAAP,CAAeE,KAJN;AAKhBC,QAAAA,KAAK,EAAEV,MAAM,CAACO,OAAP,CAAeG,KALN;AAMhBC,QAAAA,cAAc,EAAEX,MAAM,CAACO,OAAP,CAAeI,cANf;AAOhBC,QAAAA,GAAG,EAAEZ,MAAM,CAACO,OAAP,CAAeK;AAPJ,OAAX,CAAP;;AASF,SAAKf,OAAO,CAACgB,WAAb;AAA0B;AACxB,eAAOd,KAAK,CAACe,MAAN,CAAcC,IAAD,IAAUf,MAAM,CAACO,OAAP,CAAeJ,EAAf,KAAsBY,IAAI,CAACZ,EAAlD,CAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AAfJ;AAiBD","sourcesContent":["import * as actions from './actionTypes';\r\n\r\n// eslint-disable-next-line default-param-last\r\nexport default function reducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actions.COIN_ADD:\r\n      return [...state, {\r\n        id: Math.random(),\r\n        name: action.payload.name,\r\n        symbol: action.payload.symbol,\r\n        count: action.payload.count,\r\n        price: action.payload.price,\r\n        coinTotalPrice: action.payload.coinTotalPrice,\r\n        key: action.payload.key,\r\n      }];\r\n    case actions.COIN_REMOVE: {\r\n      return state.filter((task) => action.payload.id !== task.id);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}