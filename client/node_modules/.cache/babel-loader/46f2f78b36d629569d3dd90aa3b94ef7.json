{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\src\\\\Head\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport HeaderBlocks from '../Components/Header/HeaderBlocks';\nimport totalPrice from '../Functions/totalprice';\nimport priceDiff from '../Functions/priceDiff';\nimport fixed from '../Functions/fixed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header(_ref) {\n  _s();\n\n  let {\n    coins,\n    tasks\n  } = _ref;\n  const [totalprice, SetTotalPrice] = useState(0);\n  const [priceDifferences, setPriceDifferences] = useState(null);\n  const [priceProcent, setPriceProcent] = useState(null);\n  const currentCoins = coins.slice(0, 3);\n\n  const getUpdateCoins = () => {\n    const array = [];\n    tasks.forEach(task => {\n      const updateCoins = coins.find(coin => coin.id === task.key);\n      array.push(updateCoins);\n    });\n    return array;\n  };\n\n  const getProcent = (totalAmount, priceDifference) => {\n    if (!tasks.length) return setPriceProcent(null);\n    const procent = priceDifference / (totalAmount / 100);\n    setPriceProcent(fixed(procent));\n  };\n\n  const getTotalPrice = () => {\n    if (!tasks.length) return SetTotalPrice(0);\n    const totalAmount = totalPrice(tasks);\n    SetTotalPrice(totalAmount);\n    return totalAmount;\n  };\n\n  const getPriceDifferences = totalAmount => {\n    if (!tasks.length) return setPriceDifferences(null);\n    const array = getUpdateCoins();\n    const updatePrice = priceDiff(array, tasks);\n    let priceDifference = totalAmount - updatePrice;\n    priceDifference = fixed(priceDifference);\n    setPriceDifferences(priceDifference);\n    return priceDifference;\n  };\n\n  useEffect(() => {\n    const totalAmount = getTotalPrice();\n    const priceDifference = getPriceDifferences(totalAmount);\n    getProcent(totalAmount, priceDifference);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center mb-4 mt-2 py-2\",\n        children: [/*#__PURE__*/_jsxDEV(HeaderBlocks, {\n          currentCoins: currentCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg col-sm text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/*',\n            children: \"List page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg col-sm text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/storepage\",\n            children: \"Store:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), ' ', \"$\", totalprice, ' ', priceDifferences, ' ', \"(\", priceProcent, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"N4OjWdll2zWGnBycZs4xYK3I5L8=\");\n\n_c = Header;\nHeader.propTypes = {\n  coins: PropTypes.array,\n  tasks: PropTypes.array\n};\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Head/Header.jsx"],"names":["React","useEffect","useState","Link","PropTypes","HeaderBlocks","totalPrice","priceDiff","fixed","Header","coins","tasks","totalprice","SetTotalPrice","priceDifferences","setPriceDifferences","priceProcent","setPriceProcent","currentCoins","slice","getUpdateCoins","array","forEach","task","updateCoins","find","coin","id","key","push","getProcent","totalAmount","priceDifference","length","procent","getTotalPrice","getPriceDifferences","updatePrice","propTypes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport HeaderBlocks from '../Components/Header/HeaderBlocks';\r\nimport totalPrice from '../Functions/totalprice';\r\nimport priceDiff from '../Functions/priceDiff';\r\nimport fixed from '../Functions/fixed';\r\n\r\nfunction Header({ coins, tasks }) {\r\n  const [totalprice, SetTotalPrice] = useState(0);\r\n  const [priceDifferences, setPriceDifferences] = useState(null);\r\n  const [priceProcent, setPriceProcent] = useState(null);\r\n\r\n  const currentCoins = coins.slice(0, 3);\r\n\r\n  const getUpdateCoins = () => {\r\n    const array = [];\r\n    tasks.forEach((task) => {\r\n      const updateCoins = coins.find((coin) => coin.id === task.key);\r\n      array.push(updateCoins);\r\n    });\r\n    return array;\r\n  };\r\n\r\n  const getProcent = (totalAmount, priceDifference) => {\r\n    if (!tasks.length) return setPriceProcent(null);\r\n    const procent = priceDifference / (totalAmount / 100);\r\n    setPriceProcent(fixed(procent));\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    if (!tasks.length) return SetTotalPrice(0);\r\n    const totalAmount = totalPrice(tasks);\r\n    SetTotalPrice(totalAmount);\r\n    return totalAmount;\r\n  };\r\n\r\n  const getPriceDifferences = (totalAmount) => {\r\n    if (!tasks.length) return setPriceDifferences(null);\r\n    const array = getUpdateCoins();\r\n    const updatePrice = priceDiff(array, tasks);\r\n    let priceDifference = totalAmount - updatePrice;\r\n    priceDifference = fixed(priceDifference);\r\n    setPriceDifferences(priceDifference);\r\n    return priceDifference;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const totalAmount = getTotalPrice();\r\n    const priceDifference = getPriceDifferences(totalAmount);\r\n    getProcent(totalAmount, priceDifference);\r\n  });\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-center mb-4 mt-2 py-2\">\r\n          <HeaderBlocks currentCoins={currentCoins} />\r\n          <div className=\"col-lg col-sm text-center\">\r\n            <Link to={'/*'}>List page</Link>\r\n          </div>\r\n          <div className=\"col-lg col-sm text-center\">\r\n            <Link to=\"/storepage\">Store:</Link>\r\n            {' '}\r\n            $\r\n            {totalprice}\r\n            {' '}\r\n            {priceDifferences}\r\n            {' '}\r\n            (\r\n            {priceProcent}\r\n            %)\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  coins: PropTypes.array,\r\n  tasks: PropTypes.array,\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}