{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\src\\\\Main\\\\Pages\\\\ListPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CoinBlock from '../../Components/ListPageComponents/CoinBlock';\nimport Header from '../../Components/ListPageComponents/Header';\nimport Pagination from '../../Components/ListPageComponents/Pagination'; // import { sortCoins } from '../../utilities/sortCoins';\n\nimport getInfo from '../../API/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  value: 1,\n  symbol: '$'\n};\n\nfunction ListPage(_ref) {\n  _s();\n\n  let {\n    searchText,\n    coinsPerPage,\n    rateId\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentCoins, setCurrentCoins] = useState([]);\n  const [totalCoins, setTotalCoins] = useState(2000);\n  const [time, setTime] = useState(0);\n  const [totalPages, setTotalPages] = useState(200);\n  const [rate, setRate] = useState(initialState); // const [sortedCoins, setSortedCoins] = useState([]);\n  // const [sortName, setSortName] = useState('');\n  // const [cryptocurrency, setCryptocurrency] = useState([]);\n\n  const pagination = pageNamber => setCurrentPage(pageNamber); // const sort = (name) => setSortName(name);\n\n\n  useEffect(() => {\n    const update = () => {\n      setTime(prevTime => prevTime + 1);\n      setTimeout(update, 10000);\n    };\n\n    update();\n  }, []);\n  useEffect(() => {\n    setTotalPages(Math.ceil(totalCoins / coinsPerPage));\n  }, [totalCoins, coinsPerPage]);\n  useEffect(() => {\n    const getRate = async () => {\n      if (rateId === '') return;\n      if (rateId === 'united-states-dollar') setRate(initialState);else {\n        const response = await getInfo(`rates/${rateId}`);\n        setRate({\n          value: response.rateUsd,\n          symbol: response.currencySymbol\n        });\n      }\n    };\n\n    getRate();\n  }, [rateId]);\n  useEffect(() => {\n    const getCoins = async () => {\n      const firstCoinsIndex = currentPage * coinsPerPage - coinsPerPage;\n      let response;\n\n      if (searchText.length !== 0) {\n        const responseCount = await getInfo(`assets/?search=${searchText}&limit=2000`);\n        response = await getInfo(`assets/?offset=${firstCoinsIndex}&limit=${coinsPerPage}&search=${searchText}`);\n        setTotalCoins(responseCount.length);\n      } else {\n        response = await getInfo(`assets/?offset=${firstCoinsIndex}&limit=${coinsPerPage}`);\n        setTotalCoins(2000);\n      }\n\n      setCurrentCoins(response);\n    };\n\n    getCoins();\n  }, [coinsPerPage, time, currentPage, searchText]); // useEffect(() => {\n  //   if (searchText.length !== 0) return;\n  //   setSortedCoins(sortCoins(sortName, cryptocurrency));\n  // }, [sortName, searchText, cryptocurrency]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinBlock, {\n      coins: currentCoins,\n      rate: rate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListPage, \"aLj0gPVbBOGRMOoX5LJDUxv+iGU=\");\n\n_c = ListPage;\nexport default ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Main/Pages/ListPage.jsx"],"names":["React","useEffect","useState","CoinBlock","Header","Pagination","getInfo","initialState","value","symbol","ListPage","searchText","coinsPerPage","rateId","currentPage","setCurrentPage","currentCoins","setCurrentCoins","totalCoins","setTotalCoins","time","setTime","totalPages","setTotalPages","rate","setRate","pagination","pageNamber","update","prevTime","setTimeout","Math","ceil","getRate","response","rateUsd","currencySymbol","getCoins","firstCoinsIndex","length","responseCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CoinBlock from '../../Components/ListPageComponents/CoinBlock';\r\nimport Header from '../../Components/ListPageComponents/Header';\r\nimport Pagination from '../../Components/ListPageComponents/Pagination';\r\n// import { sortCoins } from '../../utilities/sortCoins';\r\nimport getInfo from '../../API/api';\r\n\r\nconst initialState = {\r\n  value: 1,\r\n  symbol: '$',\r\n};\r\n\r\nfunction ListPage({ searchText, coinsPerPage, rateId }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentCoins, setCurrentCoins] = useState([]);\r\n  const [totalCoins, setTotalCoins] = useState(2000);\r\n  const [time, setTime] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(200);\r\n  const [rate, setRate] = useState(initialState);\r\n  // const [sortedCoins, setSortedCoins] = useState([]);\r\n  // const [sortName, setSortName] = useState('');\r\n  // const [cryptocurrency, setCryptocurrency] = useState([]);\r\n\r\n  const pagination = (pageNamber) => setCurrentPage(pageNamber);\r\n\r\n  // const sort = (name) => setSortName(name);\r\n\r\n  useEffect(() => {\r\n    const update = () => {\r\n      setTime((prevTime) => prevTime + 1);\r\n      setTimeout(update, 10000);\r\n    };\r\n    update();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalCoins / coinsPerPage));\r\n  }, [totalCoins, coinsPerPage]);\r\n\r\n  useEffect(() => {\r\n    const getRate = async () => {\r\n      if (rateId === '') return;\r\n      if (rateId === 'united-states-dollar') setRate(initialState);\r\n      else {\r\n        const response = await getInfo(`rates/${rateId}`);\r\n        setRate({\r\n          value: response.rateUsd,\r\n          symbol: response.currencySymbol,\r\n        });\r\n      }\r\n    };\r\n    getRate();\r\n  }, [rateId]);\r\n\r\n  useEffect(() => {\r\n    const getCoins = async () => {\r\n      const firstCoinsIndex = (currentPage * coinsPerPage) - coinsPerPage;\r\n      let response;\r\n      if (searchText.length !== 0) {\r\n        const responseCount = await getInfo(`assets/?search=${searchText}&limit=2000`);\r\n        response = await getInfo(`assets/?offset=${firstCoinsIndex}&limit=${coinsPerPage}&search=${searchText}`);\r\n        setTotalCoins(responseCount.length);\r\n      } else {\r\n        response = await getInfo(`assets/?offset=${firstCoinsIndex}&limit=${coinsPerPage}`);\r\n        setTotalCoins(2000);\r\n      }\r\n      setCurrentCoins(response);\r\n    };\r\n    getCoins();\r\n  }, [coinsPerPage, time, currentPage, searchText]);\r\n\r\n  // useEffect(() => {\r\n  //   if (searchText.length !== 0) return;\r\n  //   setSortedCoins(sortCoins(sortName, cryptocurrency));\r\n  // }, [sortName, searchText, cryptocurrency]);\r\n\r\n  return (\r\n    <div className=\"list-page\">\r\n      <Header />\r\n      <CoinBlock coins={currentCoins} rate={rate} />\r\n      <Pagination totalPages={totalPages} pagination={pagination} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ListPage;\r\n"]},"metadata":{},"sourceType":"module"}