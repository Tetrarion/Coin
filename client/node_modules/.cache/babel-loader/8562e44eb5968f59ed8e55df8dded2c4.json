{"ast":null,"code":"import PropTypes from 'prop-types';\nexport default function fixed(num) {\n  console.log(typeof num);\n  let count = Number(num).toFixed(2);\n  const countfix = Number(num).toFixed(0);\n  const len = countfix.toString();\n\n  if (len.length > 6 && len.length < 10) {\n    count = countfix / 1e6;\n    count = Number(count).toFixed(2);\n    count = `${count}m`;\n  }\n\n  if (len.length > 9) {\n    count = countfix / 1e9;\n    count = Number(count).toFixed(2);\n    count = `${count}b`;\n  }\n\n  return count;\n}\nfixed.PropTypes = {\n  num: PropTypes.number\n};","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/utilities/fixed.js"],"names":["PropTypes","fixed","num","console","log","count","Number","toFixed","countfix","len","toString","length","number"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,KAAT,CAAeC,GAAf,EAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,GAAnB;AACA,MAAIG,KAAK,GAAGC,MAAM,CAACJ,GAAD,CAAN,CAAYK,OAAZ,CAAoB,CAApB,CAAZ;AACA,QAAMC,QAAQ,GAAGF,MAAM,CAACJ,GAAD,CAAN,CAAYK,OAAZ,CAAoB,CAApB,CAAjB;AACA,QAAME,GAAG,GAAGD,QAAQ,CAACE,QAAT,EAAZ;;AACA,MAAID,GAAG,CAACE,MAAJ,GAAa,CAAb,IAAkBF,GAAG,CAACE,MAAJ,GAAa,EAAnC,EAAuC;AACrCN,IAAAA,KAAK,GAAGG,QAAQ,GAAG,GAAnB;AACAH,IAAAA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAN,CAAcE,OAAd,CAAsB,CAAtB,CAAR;AACAF,IAAAA,KAAK,GAAI,GAAEA,KAAM,GAAjB;AACD;;AACD,MAAII,GAAG,CAACE,MAAJ,GAAa,CAAjB,EAAoB;AAClBN,IAAAA,KAAK,GAAGG,QAAQ,GAAG,GAAnB;AACAH,IAAAA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAN,CAAcE,OAAd,CAAsB,CAAtB,CAAR;AACAF,IAAAA,KAAK,GAAI,GAAEA,KAAM,GAAjB;AACD;;AACD,SAAOA,KAAP;AACD;AAEDJ,KAAK,CAACD,SAAN,GAAkB;AAChBE,EAAAA,GAAG,EAAEF,SAAS,CAACY;AADC,CAAlB","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function fixed(num) {\r\n  console.log(typeof(num));\r\n  let count = Number(num).toFixed(2);\r\n  const countfix = Number(num).toFixed(0);\r\n  const len = countfix.toString();\r\n  if (len.length > 6 && len.length < 10) {\r\n    count = countfix / 1e6;\r\n    count = Number(count).toFixed(2);\r\n    count = `${count}m`;\r\n  }\r\n  if (len.length > 9) {\r\n    count = countfix / 1e9;\r\n    count = Number(count).toFixed(2);\r\n    count = `${count}b`;\r\n  }\r\n  return count;\r\n}\r\n\r\nfixed.PropTypes = {\r\n  num: PropTypes.number,\r\n};"]},"metadata":{},"sourceType":"module"}