{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\src\\\\Head\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport HeaderBlocks from \"../Components/Header/HeaderBlocks\";\nimport { totalPrice } from \"../Functions/totalprice\";\nimport { Link } from 'react-router-dom';\nimport { priceDiff } from \"../Functions/priceDiff\";\nimport { fixed } from \"../Functions/fixed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(_ref) {\n  _s();\n\n  let {\n    coins,\n    tasks\n  } = _ref;\n  const [totalprice, SetTotalPrice] = useState(0);\n  const [priceDifferences, setPriceDifferences] = useState(null);\n  const [priceProcent, setPriceProcent] = useState(null);\n  let currentCoins = coins.slice(0, 3);\n\n  const getUpdateCoins = () => {\n    let array = [];\n    tasks.forEach(task => {\n      let updateCoins = coins.find(coin => coin.id === task.key);\n      array.push(updateCoins);\n    });\n    return array;\n  };\n\n  const getProcent = (totalprice, priceDifferences) => {\n    if (!tasks.length) return setPriceProcent(null);\n    let procent = priceDifferences / (totalprice / 100);\n    setPriceProcent(fixed(procent));\n  };\n\n  const getTotalPrice = () => {\n    if (!tasks.length) return SetTotalPrice(0);\n    let totalprice = totalPrice(tasks);\n    SetTotalPrice(totalprice);\n    return totalprice;\n  };\n\n  const getPriceDifferences = totalprice => {\n    if (!tasks.length) return setPriceDifferences(null);\n    let array = getUpdateCoins();\n    let updateprice = priceDiff(array, tasks);\n    let priceDifferences = totalprice - updateprice;\n    priceDifferences = fixed(priceDifferences);\n    setPriceDifferences(priceDifferences);\n    return priceDifferences;\n  };\n\n  useEffect(() => {\n    let totalprice = getTotalPrice();\n    let priceDifferences = getPriceDifferences(totalprice);\n    getProcent(totalprice, priceDifferences);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center mb-4 mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(HeaderBlocks, {\n          currentCoins: currentCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg col-sm\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/*',\n            children: \"List page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg col-sm text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: '/storepage',\n            children: \"Store:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), \" $\", totalprice, \" \", priceDifferences, \" (\", priceProcent, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"N4OjWdll2zWGnBycZs4xYK3I5L8=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Head/Header.jsx"],"names":["useEffect","useState","HeaderBlocks","totalPrice","Link","priceDiff","fixed","Header","coins","tasks","totalprice","SetTotalPrice","priceDifferences","setPriceDifferences","priceProcent","setPriceProcent","currentCoins","slice","getUpdateCoins","array","forEach","task","updateCoins","find","coin","id","key","push","getProcent","length","procent","getTotalPrice","getPriceDifferences","updateprice"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport HeaderBlocks from \"../Components/Header/HeaderBlocks\";\r\nimport { totalPrice } from \"../Functions/totalprice\";\r\nimport {Link} from 'react-router-dom';\r\nimport { priceDiff } from \"../Functions/priceDiff\"; \r\nimport { fixed } from \"../Functions/fixed\";\r\n\r\nexport default function Header ({ coins, tasks }) {\r\n    const [totalprice, SetTotalPrice] = useState(0);\r\n    const [priceDifferences, setPriceDifferences] = useState(null);\r\n    const [priceProcent, setPriceProcent] = useState(null);\r\n\r\n    let currentCoins = coins.slice(0, 3);\r\n\r\n    const getUpdateCoins = () => {\r\n        let array = [];\r\n        tasks.forEach(task => {\r\n            let updateCoins = coins.find(coin => coin.id === task.key);\r\n            array.push(updateCoins);\r\n        });\r\n        return array;\r\n    };\r\n\r\n    const getProcent = (totalprice, priceDifferences) => {\r\n        if (!tasks.length) return setPriceProcent(null);\r\n        let procent = priceDifferences / (totalprice / 100);\r\n        setPriceProcent(fixed(procent));\r\n    };\r\n\r\n    const getTotalPrice = () => {\r\n        if (!tasks.length) return SetTotalPrice(0);\r\n        let totalprice = totalPrice(tasks);\r\n        SetTotalPrice(totalprice); \r\n        return totalprice;\r\n    };\r\n\r\n    const getPriceDifferences = (totalprice) => {\r\n        if (!tasks.length) return setPriceDifferences(null);\r\n        let array = getUpdateCoins();\r\n        let updateprice = priceDiff(array, tasks);\r\n        let priceDifferences = totalprice - updateprice;\r\n        priceDifferences = fixed(priceDifferences);\r\n        setPriceDifferences(priceDifferences);\r\n        return priceDifferences;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let totalprice = getTotalPrice();\r\n        let priceDifferences = getPriceDifferences(totalprice);\r\n        getProcent(totalprice, priceDifferences);\r\n    });\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center mb-4 mt-2\">\r\n                    <HeaderBlocks currentCoins={currentCoins}/>\r\n                    <div className=\"col-lg col-sm\">\r\n                        <Link to={'/*'}>List page</Link>\r\n                    </div>\r\n                    <div className=\"col-lg col-sm text-center\">\r\n                    <Link to={'/storepage'}>Store:</Link> ${totalprice} {priceDifferences} ({priceProcent}%)\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}