{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\client\\\\src\\\\Header\\\\components\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Select } from '../../components/Select/Select';\nimport { SelectList } from './SelectList';\nimport settingsImage from '../../images/40031.png';\nimport { GET_ALL_RATES } from '../../query/rates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Settings(_ref) {\n  _s();\n\n  let {\n    takeCoinsPerPage,\n    names,\n    getRateId\n  } = _ref;\n  const [className, setClassName] = useState('settings__list settings__list--hidden');\n  const [rates, setRates] = useState([]);\n  const {\n    loading,\n    data\n  } = useQuery(GET_ALL_RATES);\n\n  const showSettings = () => setClassName('settings__list');\n\n  const hideSettings = () => setClassName('settings__list settings__list--hidden');\n\n  useEffect(() => {\n    if (!loading) setRates(data.getAllRates);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings__icon-container\",\n      onClick: showSettings,\n      onKeyDown: showSettings,\n      role: \"button\",\n      tabIndex: 0,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"settings__icon\",\n        src: settingsImage,\n        alt: \"settings__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      onBlur: hideSettings,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings__list-top\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings__list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings__list-item-text\",\n          children: \"Coins on page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          func: takeCoinsPerPage,\n          names: names\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings__list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings__list-item-text\",\n          children: \"Rates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectList, {\n          func: getRateId,\n          names: rates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Settings, \"miZBqGi8qIZSyMi28h+OSy5hZVc=\", false, function () {\n  return [useQuery];\n});\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/client/src/Header/components/Settings.jsx"],"names":["React","useEffect","useState","useQuery","Select","SelectList","settingsImage","GET_ALL_RATES","Settings","takeCoinsPerPage","names","getRateId","className","setClassName","rates","setRates","loading","data","showSettings","hideSettings","getAllRates"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,OAAO,SAASC,QAAT,OAA0D;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,GAAwC;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,uCAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBd,QAAQ,CAACI,aAAD,CAAlC;;AAEA,QAAMW,YAAY,GAAG,MAAML,YAAY,CAAC,gBAAD,CAAvC;;AAEA,QAAMM,YAAY,GAAG,MAAMN,YAAY,CAAC,uCAAD,CAAvC;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACe,OAAL,EAAcD,QAAQ,CAACE,IAAI,CAACG,WAAN,CAAR;AACf,GAFQ,EAEN,CAACH,IAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,OAAO,EAAEC,YAAnD;AAAiE,MAAA,SAAS,EAAEA,YAA5E;AAA0F,MAAA,IAAI,EAAC,QAA/F;AAAwG,MAAA,QAAQ,EAAE,CAAlH;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAEZ,aAArC;AAAoD,QAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEM,SAAhB;AAA2B,MAAA,MAAM,EAAEO,YAAnC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEV,gBAAd;AAAgC,UAAA,KAAK,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAUE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEC,SAAlB;AAA6B,UAAA,KAAK,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GArCeN,Q;UAGYL,Q;;;KAHZK,Q","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Select } from '../../components/Select/Select';\r\nimport { SelectList } from './SelectList';\r\nimport settingsImage from '../../images/40031.png';\r\nimport { GET_ALL_RATES } from '../../query/rates';\r\n\r\nexport function Settings({ takeCoinsPerPage, names, getRateId }) {\r\n  const [className, setClassName] = useState('settings__list settings__list--hidden');\r\n  const [rates, setRates] = useState([]);\r\n  const { loading, data } = useQuery(GET_ALL_RATES);\r\n\r\n  const showSettings = () => setClassName('settings__list');\r\n\r\n  const hideSettings = () => setClassName('settings__list settings__list--hidden');\r\n\r\n  useEffect(() => {\r\n    if (!loading) setRates(data.getAllRates);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings__icon-container\" onClick={showSettings} onKeyDown={showSettings} role=\"button\" tabIndex={0}>\r\n        <img className=\"settings__icon\" src={settingsImage} alt=\"settings__icon\" />\r\n      </div>\r\n      <div className={className} onBlur={hideSettings}>\r\n        <div className=\"settings__list-top\">\r\n          Settings\r\n        </div>\r\n        <div className=\"settings__list-item\">\r\n          <div className=\"settings__list-item-text\">\r\n            Coins on page\r\n          </div>\r\n          <Select func={takeCoinsPerPage} names={names} />\r\n        </div>\r\n        <div className=\"settings__list-item\">\r\n          <div className=\"settings__list-item-text\">\r\n            Rates\r\n          </div>\r\n          <SelectList func={getRateId} names={rates} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}