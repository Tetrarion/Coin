{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ListPage from './Main/Pages/ListPage';\nimport './Styles/styles.scss';\nimport StorePage from './Main/Pages/StorePage';\nimport InfoPage from './Main/Pages/InfoPage';\nimport getInfo from './API/api';\nimport Header from './Head/Header';\nimport Message from './Components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [coinsPerPage, setCoinsPerPage] = useState(10);\n  const [rate, setRate] = useState(1);\n  const tasks = useSelector(state => state);\n  useEffect(() => {\n    const getCoins = async () => {\n      const response = await getInfo('assets/?offset=0&limit=4');\n      setCoins(response);\n      setTimeout(getCoins, 10000);\n    };\n\n    getCoins();\n  }, []);\n\n  const search = text => setSearchText(text);\n\n  const takeCoinsPerPage = number => setCoinsPerPage(number);\n\n  const getRate = value => setRate(value);\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      coins: coins,\n      rate: rate,\n      tasks: tasks,\n      search: search,\n      takeCoinsPerPage: takeCoinsPerPage,\n      getRate: getRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(ListPage, {\n          searchText: searchText,\n          coinsPerPage: coinsPerPage,\n          rate: rate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/storepage\",\n        element: /*#__PURE__*/_jsxDEV(StorePage, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/infopage/:id\",\n        element: /*#__PURE__*/_jsxDEV(InfoPage, {\n          rate: rate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9rEI1TbY2Z0lJTqZyipDoZADvAk=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/App.jsx"],"names":["useEffect","useState","BrowserRouter","Routes","Route","useSelector","ListPage","StorePage","InfoPage","getInfo","Header","Message","App","coins","setCoins","searchText","setSearchText","coinsPerPage","setCoinsPerPage","rate","setRate","tasks","state","getCoins","response","setTimeout","search","text","takeCoinsPerPage","number","getRate","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMoB,KAAK,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAZ,CAAzB;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,QAAQ,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMf,OAAO,CAAC,0BAAD,CAA9B;AACAK,MAAAA,QAAQ,CAACU,QAAD,CAAR;AACAC,MAAAA,UAAU,CAACF,QAAD,EAAW,KAAX,CAAV;AACD,KAJD;;AAKAA,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMG,MAAM,GAAIC,IAAD,IAAUX,aAAa,CAACW,IAAD,CAAtC;;AAEA,QAAMC,gBAAgB,GAAIC,MAAD,IAAYX,eAAe,CAACW,MAAD,CAApD;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAWX,OAAO,CAACW,KAAD,CAAlC;;AAEA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAElB,KAAf;AAAsB,MAAA,IAAI,EAAEM,IAA5B;AAAkC,MAAA,KAAK,EAAEE,KAAzC;AAAgD,MAAA,MAAM,EAAEK,MAAxD;AAAgE,MAAA,gBAAgB,EAAEE,gBAAlF;AAAoG,MAAA,OAAO,EAAEE;AAA7G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,UAAU,EAAEf,UAAtB;AAAkC,UAAA,YAAY,EAAEE,YAAhD;AAA8D,UAAA,IAAI,EAAEE;AAApE;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,OAAO,eAAE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,eAAZ;AAA4B,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnCQP,G;UAMOP,W;;;KANPO,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport ListPage from './Main/Pages/ListPage';\r\nimport './Styles/styles.scss';\r\nimport StorePage from './Main/Pages/StorePage';\r\nimport InfoPage from './Main/Pages/InfoPage';\r\nimport getInfo from './API/api';\r\nimport Header from './Head/Header';\r\nimport Message from './Components/Message';\r\n\r\nfunction App() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [coinsPerPage, setCoinsPerPage] = useState(10);\r\n  const [rate, setRate] = useState(1);\r\n\r\n  const tasks = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    const getCoins = async () => {\r\n      const response = await getInfo('assets/?offset=0&limit=4');\r\n      setCoins(response);\r\n      setTimeout(getCoins, 10000);\r\n    };\r\n    getCoins();\r\n  }, []);\r\n\r\n  const search = (text) => setSearchText(text);\r\n\r\n  const takeCoinsPerPage = (number) => setCoinsPerPage(number);\r\n\r\n  const getRate = (value) => setRate(value);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header coins={coins} rate={rate} tasks={tasks} search={search} takeCoinsPerPage={takeCoinsPerPage} getRate={getRate} />\r\n      <Routes>\r\n        <Route path=\"/*\" element={<ListPage searchText={searchText} coinsPerPage={coinsPerPage} rate={rate} />} />\r\n        <Route path=\"/storepage\" element={<StorePage tasks={tasks} />} />\r\n        <Route path=\"/infopage/:id\" element={<InfoPage rate={rate} />} />\r\n      </Routes>\r\n      <Message />\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}