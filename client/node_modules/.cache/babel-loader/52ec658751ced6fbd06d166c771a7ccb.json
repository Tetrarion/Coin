{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\src\\\\Components\\\\InfoPageComponents\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../Store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(_ref) {\n  _s();\n\n  let {\n    id,\n    rateId,\n    priceUsd,\n    symbol\n  } = _ref;\n  const [inputValue, setInputValue] = useState(0);\n  const [message, setMessage] = useState('');\n  const [totalPrice, setTotalPrice] = useState('');\n  const [currencySymbol, setCurrencySymbol] = useState('');\n  const [errorMessage, setErroMessage] = useState('');\n  const [hidden, setHidden] = useState(true);\n  useEffect(() => {\n    setMessage(document.querySelector('.message'));\n  }, []);\n\n  const showTotalPrice = value => {\n    setInputValue(value);\n\n    if (Number.isNaN(value * priceUsd) || hidden === false) {\n      setTotalPrice('');\n      setCurrencySymbol('');\n    } else {\n      setTotalPrice(value * priceUsd);\n      setCurrencySymbol(symbol);\n    }\n  };\n\n  const checkForCorrect = target => {\n    if (target.valueAsNumber < 0) {\n      setErroMessage('Please, enter positive number');\n      setHidden(false);\n    } else if (!target.valueAsNumber) {\n      setErroMessage('Please, enter number');\n      setHidden(false);\n    } else setHidden(true);\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form__input\",\n        type: \"number\",\n        onChange: e => {\n          showTotalPrice(e.target.valueAsNumber);\n          checkForCorrect(e.target);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__input-error-text\",\n        hidden: hidden,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form__button\",\n      onClick: () => dispatch(actions.loadCoin(id, inputValue, message, rateId)),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__button-text\",\n        children: \"Add to basket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__text\",\n      children: [currencySymbol, ' ', totalPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"u0PVYF1EXiRfGSCMXnuBNMj5OfA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Components/InfoPageComponents/Form.jsx"],"names":["React","useEffect","useState","useDispatch","actions","Form","id","rateId","priceUsd","symbol","inputValue","setInputValue","message","setMessage","totalPrice","setTotalPrice","currencySymbol","setCurrencySymbol","errorMessage","setErroMessage","hidden","setHidden","document","querySelector","showTotalPrice","value","Number","isNaN","checkForCorrect","target","valueAsNumber","dispatch","e","loadCoin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../Store/actions';\r\n\r\nexport default function Form({\r\n  id, rateId, priceUsd, symbol,\r\n}) {\r\n  const [inputValue, setInputValue] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n  const [totalPrice, setTotalPrice] = useState('');\r\n  const [currencySymbol, setCurrencySymbol] = useState('');\r\n  const [errorMessage, setErroMessage] = useState('');\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setMessage(document.querySelector('.message'));\r\n  }, []);\r\n\r\n  const showTotalPrice = (value) => {\r\n    setInputValue(value);\r\n    if (Number.isNaN(value * priceUsd) || hidden === false) {\r\n      setTotalPrice('');\r\n      setCurrencySymbol('');\r\n    } else {\r\n      setTotalPrice(value * priceUsd);\r\n      setCurrencySymbol(symbol);\r\n    }\r\n  };\r\n\r\n  const checkForCorrect = (target) => {\r\n    if (target.valueAsNumber < 0) {\r\n      setErroMessage('Please, enter positive number');\r\n      setHidden(false);\r\n    } else if (!target.valueAsNumber) {\r\n      setErroMessage('Please, enter number');\r\n      setHidden(false);\r\n    } else setHidden(true);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"input-container\">\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"number\"\r\n          onChange={(e) => {\r\n            showTotalPrice(e.target.valueAsNumber);\r\n            checkForCorrect(e.target);\r\n          }}\r\n        />\r\n        <div className=\"form__input-error-text\" hidden={hidden}>\r\n          {errorMessage}\r\n        </div>\r\n      </div>\r\n      <button className=\"form__button\" onClick={() => dispatch(actions.loadCoin(id, inputValue, message, rateId))}>\r\n        <div className=\"form__button-text\">Add to basket</div>\r\n      </button>\r\n      <div className=\"form__text\">\r\n        {currencySymbol}\r\n        {' '}\r\n        {totalPrice}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}