{"ast":null,"code":"import _toConsumableArray from\"C:/Users/mrgil/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Coincap/Coin/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import*as actions from'./actionTypes';var lastId=0;export default function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actions.COIN_ADD:return[].concat(_toConsumableArray(state),[{id:++lastId,name:action.payload.name,count:action.payload.count,priceUsd:action.payload.priceUsd,totalpriceUsd:action.payload.totalpriceUsd,key:action.payload.key}]);case actions.COIN_REMOVE:{return state.filter(function(task){return action.payload.id!==task.id;});}default:return state;}}","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/reducer.jsx"],"names":["actions","lastId","reducer","state","action","type","COIN_ADD","id","name","payload","count","priceUsd","totalpriceUsd","key","COIN_REMOVE","filter","task"],"mappings":"sMAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,eAAzB,CAEA,GAAIC,CAAAA,MAAM,CAAG,CAAb,CAEA,cAAe,SAASC,CAAAA,OAAT,EAAqC,IAApBC,CAAAA,KAAoB,2DAAZ,EAAY,IAARC,CAAAA,MAAQ,2CAClD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKL,CAAAA,OAAO,CAACM,QAAb,CACE,mCAAWH,KAAX,GAAkB,CAChBI,EAAE,CAAE,EAAEN,MADU,CAEhBO,IAAI,CAAEJ,MAAM,CAACK,OAAP,CAAeD,IAFL,CAGhBE,KAAK,CAAEN,MAAM,CAACK,OAAP,CAAeC,KAHN,CAIhBC,QAAQ,CAAEP,MAAM,CAACK,OAAP,CAAeE,QAJT,CAKhBC,aAAa,CAAER,MAAM,CAACK,OAAP,CAAeG,aALd,CAMhBC,GAAG,CAAET,MAAM,CAACK,OAAP,CAAeI,GANJ,CAAlB,GAQF,IAAKb,CAAAA,OAAO,CAACc,WAAb,CAA0B,CACxB,MAAOX,CAAAA,KAAK,CAACY,MAAN,CAAa,SAAAC,IAAI,QAAIZ,CAAAA,MAAM,CAACK,OAAP,CAAeF,EAAf,GAAsBS,IAAI,CAACT,EAA/B,EAAjB,CAAP,CACD,CACD,QACE,MAAOJ,CAAAA,KAAP,CAdJ,CAgBD","sourcesContent":["import * as actions from './actionTypes';\r\n\r\nlet lastId = 0;\r\n\r\nexport default function reducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actions.COIN_ADD: \r\n      return [...state, {\r\n        id: ++lastId,\r\n        name: action.payload.name,\r\n        count: action.payload.count,\r\n        priceUsd: action.payload.priceUsd,\r\n        totalpriceUsd: action.payload.totalpriceUsd,\r\n        key: action.payload.key\r\n      }];\r\n    case actions.COIN_REMOVE: {\r\n      return state.filter(task => action.payload.id !== task.id);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}