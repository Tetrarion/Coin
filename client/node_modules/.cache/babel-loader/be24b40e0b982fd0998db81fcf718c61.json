{"ast":null,"code":"import * as actions from './actionTypes';\nimport getInfo from '../API/api';\nexport const addCoin = data => ({\n  type: actions.COIN_ADD,\n  payload: {\n    name: data.coinResponse.name,\n    symbol: data.rateResponse.currencySymbol,\n    count: data.count,\n    price: data.price,\n    priceUsd: data.priceUsd,\n    coinTotalPrice: data.coinTotalPrice,\n    coinTotalPriceUsd: data.coinTotalPriceUsd,\n    key: data.coinResponse.id\n  }\n});\nexport const removeCoin = id => ({\n  type: actions.COIN_REMOVE,\n  payload: {\n    id\n  }\n});\nexport const loadCoin = (id, count, message, rateId) => async dispatch => {\n  if (count === 0 || typeof count !== 'number' || count < 0) return;\n  const coinResponse = await getInfo(`assets/${id}`);\n  const rateResponse = await getInfo(`rates/${rateId}`);\n  const coinTotalPrice = coinResponse.priceUsd * count * rateResponse.rateUsd;\n  const coinTotalPriceUsd = coinResponse.priceUsd * count;\n  const price = coinResponse.priceUsd * rateResponse.rateUsd;\n  dispatch(addCoin({\n    rateResponse,\n    coinResponse,\n    count,\n    price,\n    priceUsd: coinResponse.priceUsd,\n    coinTotalPrice,\n    coinTotalPriceUsd\n  }));\n  message.classList.remove('message--hidden');\n  setTimeout(() => message.classList.add('message--hidden'), 3000);\n};","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/actions.js"],"names":["actions","getInfo","addCoin","data","type","COIN_ADD","payload","name","coinResponse","symbol","rateResponse","currencySymbol","count","price","priceUsd","coinTotalPrice","coinTotalPriceUsd","key","id","removeCoin","COIN_REMOVE","loadCoin","message","rateId","dispatch","rateUsd","classList","remove","setTimeout","add"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEJ,OAAO,CAACK,QADkB;AAEhCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEJ,IAAI,CAACK,YAAL,CAAkBD,IADjB;AAEPE,IAAAA,MAAM,EAAEN,IAAI,CAACO,YAAL,CAAkBC,cAFnB;AAGPC,IAAAA,KAAK,EAAET,IAAI,CAACS,KAHL;AAIPC,IAAAA,KAAK,EAAEV,IAAI,CAACU,KAJL;AAKPC,IAAAA,QAAQ,EAAEX,IAAI,CAACW,QALR;AAMPC,IAAAA,cAAc,EAAEZ,IAAI,CAACY,cANd;AAOPC,IAAAA,iBAAiB,EAAEb,IAAI,CAACa,iBAPjB;AAQPC,IAAAA,GAAG,EAAEd,IAAI,CAACK,YAAL,CAAkBU;AARhB;AAFuB,CAAX,CAAhB;AAaP,OAAO,MAAMC,UAAU,GAAID,EAAD,KAAS;AACjCd,EAAAA,IAAI,EAAEJ,OAAO,CAACoB,WADmB;AAEjCd,EAAAA,OAAO,EAAE;AAAEY,IAAAA;AAAF;AAFwB,CAAT,CAAnB;AAIP,OAAO,MAAMG,QAAQ,GAAG,CAACH,EAAD,EAAKN,KAAL,EAAYU,OAAZ,EAAqBC,MAArB,KAAgC,MAAOC,QAAP,IAAoB;AAC1E,MAAIZ,KAAK,KAAK,CAAV,IAAe,OAAOA,KAAP,KAAiB,QAAhC,IAA4CA,KAAK,GAAG,CAAxD,EAA2D;AAC3D,QAAMJ,YAAY,GAAG,MAAMP,OAAO,CAAE,UAASiB,EAAG,EAAd,CAAlC;AACA,QAAMR,YAAY,GAAG,MAAMT,OAAO,CAAE,SAAQsB,MAAO,EAAjB,CAAlC;AACA,QAAMR,cAAc,GAAGP,YAAY,CAACM,QAAb,GAAwBF,KAAxB,GAAgCF,YAAY,CAACe,OAApE;AACA,QAAMT,iBAAiB,GAAGR,YAAY,CAACM,QAAb,GAAwBF,KAAlD;AACA,QAAMC,KAAK,GAAGL,YAAY,CAACM,QAAb,GAAwBJ,YAAY,CAACe,OAAnD;AACAD,EAAAA,QAAQ,CAACtB,OAAO,CAAC;AACfQ,IAAAA,YADe;AAEfF,IAAAA,YAFe;AAGfI,IAAAA,KAHe;AAIfC,IAAAA,KAJe;AAKfC,IAAAA,QAAQ,EAAEN,YAAY,CAACM,QALR;AAMfC,IAAAA,cANe;AAOfC,IAAAA;AAPe,GAAD,CAAR,CAAR;AASAM,EAAAA,OAAO,CAACI,SAAR,CAAkBC,MAAlB,CAAyB,iBAAzB;AACAC,EAAAA,UAAU,CAAC,MAAMN,OAAO,CAACI,SAAR,CAAkBG,GAAlB,CAAsB,iBAAtB,CAAP,EAAiD,IAAjD,CAAV;AACD,CAlBM","sourcesContent":["import * as actions from './actionTypes';\r\nimport getInfo from '../API/api';\r\n\r\nexport const addCoin = (data) => ({\r\n  type: actions.COIN_ADD,\r\n  payload: {\r\n    name: data.coinResponse.name,\r\n    symbol: data.rateResponse.currencySymbol,\r\n    count: data.count,\r\n    price: data.price,\r\n    priceUsd: data.priceUsd,\r\n    coinTotalPrice: data.coinTotalPrice,\r\n    coinTotalPriceUsd: data.coinTotalPriceUsd,\r\n    key: data.coinResponse.id,\r\n  },\r\n});\r\nexport const removeCoin = (id) => ({\r\n  type: actions.COIN_REMOVE,\r\n  payload: { id },\r\n});\r\nexport const loadCoin = (id, count, message, rateId) => async (dispatch) => {\r\n  if (count === 0 || typeof count !== 'number' || count < 0) return;\r\n  const coinResponse = await getInfo(`assets/${id}`);\r\n  const rateResponse = await getInfo(`rates/${rateId}`);\r\n  const coinTotalPrice = coinResponse.priceUsd * count * rateResponse.rateUsd;\r\n  const coinTotalPriceUsd = coinResponse.priceUsd * count;\r\n  const price = coinResponse.priceUsd * rateResponse.rateUsd;\r\n  dispatch(addCoin({\r\n    rateResponse,\r\n    coinResponse,\r\n    count,\r\n    price,\r\n    priceUsd: coinResponse.priceUsd,\r\n    coinTotalPrice,\r\n    coinTotalPriceUsd,\r\n  }));\r\n  message.classList.remove('message--hidden');\r\n  setTimeout(() => message.classList.add('message--hidden'), 3000);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}