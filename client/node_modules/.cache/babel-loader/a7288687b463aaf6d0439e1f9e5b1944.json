{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\n\nconst saveToLocalStorage = state => {\n  try {\n    return localStorage.setItem('state', JSON.stringify(state));\n  } catch (e) {\n    return e;\n  }\n};\n\nconst loadFromLocalStorage = () => {\n  try {\n    const stateStr = localStorage.getItem('state');\n    return stateStr ? JSON.parse(stateStr) : undefined;\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst persistedStore = loadFromLocalStorage();\nconst store = createStore(reducer, persistedStore, applyMiddleware(thunk));\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/store.js"],"names":["createStore","applyMiddleware","thunk","reducer","saveToLocalStorage","state","localStorage","setItem","JSON","stringify","e","loadFromLocalStorage","stateStr","getItem","parse","undefined","persistedStore","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,MAAI;AACF,WAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B,CAAP;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACV,WAAOA,CAAP;AACD;AACF,CAND;;AAQA,MAAMC,oBAAoB,GAAG,MAAM;AACjC,MAAI;AACF,UAAMC,QAAQ,GAAGN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAjB;AACA,WAAOD,QAAQ,GAAGJ,IAAI,CAACM,KAAL,CAAWF,QAAX,CAAH,GAA0BG,SAAzC;AACD,GAHD,CAGE,OAAOL,CAAP,EAAU;AACV,WAAOK,SAAP;AACD;AACF,CAPD;;AASA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,KAAK,GAAGjB,WAAW,CAACG,OAAD,EAAUa,cAAV,EAA0Bf,eAAe,CAACC,KAAD,CAAzC,CAAzB;AAEAe,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBd,EAAAA,kBAAkB,CAACa,KAAK,CAACE,QAAN,EAAD,CAAlB;AACD,CAFD;AAIA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nconst saveToLocalStorage = (state) => {\r\n  try {\r\n    return localStorage.setItem('state', JSON.stringify(state));\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n\r\nconst loadFromLocalStorage = () => {\r\n  try {\r\n    const stateStr = localStorage.getItem('state');\r\n    return stateStr ? JSON.parse(stateStr) : undefined;\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst persistedStore = loadFromLocalStorage();\r\n\r\nconst store = createStore(reducer, persistedStore, applyMiddleware(thunk));\r\n\r\nstore.subscribe(() => {\r\n  saveToLocalStorage(store.getState());\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}