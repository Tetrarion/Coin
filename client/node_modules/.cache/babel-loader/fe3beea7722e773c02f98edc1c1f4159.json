{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/mrgil/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Coincap/Coin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import*as actions from'./actionTypes';import getInfo from'../API/api';export var addCoin=function addCoin(data){return{type:actions.COIN_ADD,payload:{name:data.coinResponse.name,symbol:data.rateResponse.currencySymbol,count:data.count,price:data.price,coinTotalPrice:data.coinTotalPrice,coinTotalPriceUsd:data.coinTotalPriceUsd,key:data.coinResponse.id}};};export var removeCoin=function removeCoin(id){return{type:actions.COIN_REMOVE,payload:{id:id}};};export var loadCoin=function loadCoin(id,count,message,rateId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var coinResponse,rateResponse,coinTotalPrice,coinTotalPriceUsd,price;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(count===0||typeof count!=='number'||count<0)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return getInfo(\"assets/\".concat(id));case 4:coinResponse=_context.sent;_context.next=7;return getInfo(\"rates/\".concat(rateId));case 7:rateResponse=_context.sent;coinTotalPrice=coinResponse.priceUsd*count*rateResponse.rateUsd;coinTotalPriceUsd=coinResponse.priceUsd*count;price=coinResponse.priceUsd*rateResponse.rateUsd;dispatch(addCoin({rateResponse:rateResponse,coinResponse:coinResponse,count:count,price:price,coinTotalPrice:coinTotalPrice,coinTotalPriceUsd:coinTotalPriceUsd}));message.classList.remove('message--hidden');setTimeout(function(){return message.classList.add('message--hidden');},3000);case 14:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Store/actions.js"],"names":["actions","getInfo","addCoin","data","type","COIN_ADD","payload","name","coinResponse","symbol","rateResponse","currencySymbol","count","price","coinTotalPrice","coinTotalPriceUsd","key","id","removeCoin","COIN_REMOVE","loadCoin","message","rateId","dispatch","priceUsd","rateUsd","classList","remove","setTimeout","add"],"mappings":"0YAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,eAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,QAAW,CAChCC,IAAI,CAAEJ,OAAO,CAACK,QADkB,CAEhCC,OAAO,CAAE,CACPC,IAAI,CAAEJ,IAAI,CAACK,YAAL,CAAkBD,IADjB,CAEPE,MAAM,CAAEN,IAAI,CAACO,YAAL,CAAkBC,cAFnB,CAGPC,KAAK,CAAET,IAAI,CAACS,KAHL,CAIPC,KAAK,CAAEV,IAAI,CAACU,KAJL,CAKPC,cAAc,CAAEX,IAAI,CAACW,cALd,CAMPC,iBAAiB,CAAEZ,IAAI,CAACY,iBANjB,CAOPC,GAAG,CAAEb,IAAI,CAACK,YAAL,CAAkBS,EAPhB,CAFuB,CAAX,EAAhB,CAYP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,EAAD,QAAS,CACjCb,IAAI,CAAEJ,OAAO,CAACmB,WADmB,CAEjCb,OAAO,CAAE,CAAEW,EAAE,CAAFA,EAAF,CAFwB,CAAT,EAAnB,CAIP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,EAAD,CAAKL,KAAL,CAAYS,OAAZ,CAAqBC,MAArB,iGAAgC,iBAAOC,QAAP,4LAClDX,KAAK,GAAK,CAAV,EAAe,MAAOA,CAAAA,KAAP,GAAiB,QAAhC,EAA4CA,KAAK,CAAG,CADF,wFAE3BX,CAAAA,OAAO,kBAAWgB,EAAX,EAFoB,QAEhDT,YAFgD,qCAG3BP,CAAAA,OAAO,iBAAUqB,MAAV,EAHoB,QAGhDZ,YAHgD,eAIhDI,cAJgD,CAI/BN,YAAY,CAACgB,QAAb,CAAwBZ,KAAxB,CAAgCF,YAAY,CAACe,OAJd,CAKhDV,iBALgD,CAK5BP,YAAY,CAACgB,QAAb,CAAwBZ,KALI,CAMhDC,KANgD,CAMxCL,YAAY,CAACgB,QAAb,CAAwBd,YAAY,CAACe,OANG,CAOtDF,QAAQ,CAACrB,OAAO,CAAC,CACfQ,YAAY,CAAZA,YADe,CAEfF,YAAY,CAAZA,YAFe,CAGfI,KAAK,CAALA,KAHe,CAIfC,KAAK,CAALA,KAJe,CAKfC,cAAc,CAAdA,cALe,CAMfC,iBAAiB,CAAjBA,iBANe,CAAD,CAAR,CAAR,CAQAM,OAAO,CAACK,SAAR,CAAkBC,MAAlB,CAAyB,iBAAzB,EACAC,UAAU,CAAC,iBAAMP,CAAAA,OAAO,CAACK,SAAR,CAAkBG,GAAlB,CAAsB,iBAAtB,CAAN,EAAD,CAAiD,IAAjD,CAAV,CAhBsD,uDAAhC,gEAAjB","sourcesContent":["import * as actions from './actionTypes';\r\nimport getInfo from '../API/api';\r\n\r\nexport const addCoin = (data) => ({\r\n  type: actions.COIN_ADD,\r\n  payload: {\r\n    name: data.coinResponse.name,\r\n    symbol: data.rateResponse.currencySymbol,\r\n    count: data.count,\r\n    price: data.price,\r\n    coinTotalPrice: data.coinTotalPrice,\r\n    coinTotalPriceUsd: data.coinTotalPriceUsd,\r\n    key: data.coinResponse.id,\r\n  },\r\n});\r\nexport const removeCoin = (id) => ({\r\n  type: actions.COIN_REMOVE,\r\n  payload: { id },\r\n});\r\nexport const loadCoin = (id, count, message, rateId) => async (dispatch) => {\r\n  if (count === 0 || typeof count !== 'number' || count < 0) return;\r\n  const coinResponse = await getInfo(`assets/${id}`);\r\n  const rateResponse = await getInfo(`rates/${rateId}`);\r\n  const coinTotalPrice = coinResponse.priceUsd * count * rateResponse.rateUsd;\r\n  const coinTotalPriceUsd = coinResponse.priceUsd * count;\r\n  const price = coinResponse.priceUsd * rateResponse.rateUsd;\r\n  dispatch(addCoin({\r\n    rateResponse,\r\n    coinResponse,\r\n    count,\r\n    price,\r\n    coinTotalPrice,\r\n    coinTotalPriceUsd,\r\n  }));\r\n  message.classList.remove('message--hidden');\r\n  setTimeout(() => message.classList.add('message--hidden'), 3000);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}