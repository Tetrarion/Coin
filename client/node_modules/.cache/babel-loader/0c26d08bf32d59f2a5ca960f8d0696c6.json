{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/mrgil/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Coincap/Coin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{getInfo}from\"../API/api\";import{fixed}from\"./fixed\";import*as actions from\"../Store/actions\";export var handleCoinSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id,dispatch,target){var coininf,input,count,price,totalPrice,name;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getInfo(\"assets/\".concat(id));case 2:coininf=_context.sent;input=target.querySelector('input');count=input.value;input.value='';if(Number(count)){_context.next=9;break;}alert('Please, enter integer or float value');return _context.abrupt(\"return\");case 9:price=fixed(coininf.priceUsd);totalPrice=fixed(price*count);name=coininf.name;dispatch(actions.addCoin({title:{name:name,count:count,priceUsd:price,totalpriceUsd:totalPrice,key:id}}));case 13:case\"end\":return _context.stop();}}},_callee);}));return function handleCoinSubmit(_x,_x2,_x3){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Functions/handleCoinSubmit.jsx"],"names":["getInfo","fixed","actions","handleCoinSubmit","id","dispatch","target","coininf","input","querySelector","count","value","Number","alert","price","priceUsd","totalPrice","name","addCoin","title","totalpriceUsd","key"],"mappings":"0YAAA,OAASA,OAAT,KAAwB,YAAxB,CACA,OAASC,KAAT,KAAsB,SAAtB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,kBAAzB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,0FAAG,iBAAQC,EAAR,CAAYC,QAAZ,CAAsBC,MAAtB,sLACRN,CAAAA,OAAO,kBAAWI,EAAX,EADC,QACxBG,OADwB,eAExBC,KAFwB,CAEhBF,MAAM,CAACG,aAAP,CAAqB,OAArB,CAFgB,CAGxBC,KAHwB,CAGhBF,KAAK,CAACG,KAHU,CAI5BH,KAAK,CAACG,KAAN,CAAc,EAAd,CAJ4B,GAMvBC,MAAM,CAACF,KAAD,CANiB,yBAO1BG,KAAK,CAAC,sCAAD,CAAL,CAP0B,wCAWxBC,KAXwB,CAWhBb,KAAK,CAACM,OAAO,CAACQ,QAAT,CAXW,CAYxBC,UAZwB,CAYXf,KAAK,CAAEa,KAAK,CAAGJ,KAAV,CAZM,CAaxBO,IAbwB,CAajBV,OAAO,CAACU,IAbS,CAe5BZ,QAAQ,CAACH,OAAO,CAACgB,OAAR,CAAgB,CACvBC,KAAK,CAAE,CACHF,IAAI,CAAEA,IADH,CAEHP,KAAK,CAAEA,KAFJ,CAGHK,QAAQ,CAAED,KAHP,CAIHM,aAAa,CAAEJ,UAJZ,CAKHK,GAAG,CAAEjB,EALF,CADgB,CAAhB,CAAD,CAAR,CAf4B,uDAAH,kBAAhBD,CAAAA,gBAAgB,oDAAtB","sourcesContent":["import { getInfo } from \"../API/api\";\r\nimport { fixed } from \"./fixed\";\r\nimport * as actions from \"../Store/actions\";\r\n\r\nexport const handleCoinSubmit = async ( id, dispatch, target ) => { \r\n    let coininf = await getInfo(`assets/${id}`);\r\n    let input = target.querySelector('input');\r\n    let count = input.value;\r\n    input.value = '';\r\n    \r\n    if (!Number(count)) {\r\n      alert('Please, enter integer or float value');\r\n      return;\r\n    }\r\n\r\n    let price = fixed(coininf.priceUsd);\r\n    let totalPrice = fixed((price * count));\r\n    let name = coininf.name;\r\n\r\n    dispatch(actions.addCoin({\r\n      title: {\r\n          name: name,\r\n          count: count,\r\n          priceUsd: price,\r\n          totalpriceUsd: totalPrice,\r\n          key: id\r\n      }\r\n    }));\r\n    \r\n};"]},"metadata":{},"sourceType":"module"}