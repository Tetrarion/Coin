{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrgil\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Coincap\\\\Coin\\\\src\\\\Main\\\\Pages\\\\ListPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CoinBlock from '../../Components/ListPageComponents/CoinBlock';\nimport Header from '../../Components/ListPageComponents/Header';\nimport Pagination from '../../Components/ListPageComponents/Pagination'; // import { sortCoins } from '../../utilities/sortCoins';\n\nimport Select from '../../Components/ListPageComponents/Select';\nimport getInfo from '../../API/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListPage(_ref) {\n  _s();\n\n  let {\n    searchText\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [coinsPerPage, setCoinsPerPage] = useState(10);\n  const [currentCoins, setCurrentCoins] = useState([]);\n  const [totalCoins, setTotalCoins] = useState(2000);\n  const [time, setTime] = useState(0);\n  const [totalPages, setTotalPages] = useState(200); // const [sortedCoins, setSortedCoins] = useState([]);\n  // const [sortName, setSortName] = useState('');\n  // const [cryptocurrency, setCryptocurrency] = useState([]);\n\n  const pagination = pageNamber => setCurrentPage(pageNamber); // const sort = (name) => setSortName(name);\n\n\n  useEffect(() => {\n    const update = () => {\n      setTime(prevTime => prevTime + 1);\n      setTimeout(update, 10000);\n    };\n\n    update();\n  }, []);\n  useEffect(() => {\n    setTotalPages(Math.ceil(totalCoins / coinsPerPage));\n  }, [totalCoins, coinsPerPage]);\n  useEffect(() => {\n    const getCoins = async () => {\n      const firstCoinsIndex = currentPage * coinsPerPage - coinsPerPage;\n      let response;\n\n      if (searchText.length !== 0) {\n        const responseCount = await getInfo(`?search=${searchText}&limit=2000`);\n        response = await getInfo(`?offset=${firstCoinsIndex}&limit=${coinsPerPage}&search=${searchText}`);\n        setTotalCoins(responseCount.length);\n      } else {\n        response = await getInfo(`?offset=${firstCoinsIndex}&limit=${coinsPerPage}`);\n        setTotalCoins(2000);\n      }\n\n      setCurrentCoins(response);\n    };\n\n    getCoins();\n  }, [coinsPerPage, time, currentPage, searchText]);\n\n  const takeCoinsPerPage = number => setCoinsPerPage(number);\n\n  const names = [10, 12, 15, 17, 20]; // useEffect(() => {\n  //   if (searchText.length !== 0) return;\n  //   setSortedCoins(sortCoins(sortName, cryptocurrency));\n  // }, [sortName, searchText, cryptocurrency]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-page\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      func: takeCoinsPerPage,\n      names: names\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinBlock, {\n      coins: currentCoins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListPage, \"G+/MLCsc7J0sX1lVcbeb1wDnpOU=\");\n\n_c = ListPage;\nexport default ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["C:/Users/mrgil/OneDrive/Рабочий стол/Coincap/Coin/src/Main/Pages/ListPage.jsx"],"names":["React","useEffect","useState","CoinBlock","Header","Pagination","Select","getInfo","ListPage","searchText","currentPage","setCurrentPage","coinsPerPage","setCoinsPerPage","currentCoins","setCurrentCoins","totalCoins","setTotalCoins","time","setTime","totalPages","setTotalPages","pagination","pageNamber","update","prevTime","setTimeout","Math","ceil","getCoins","firstCoinsIndex","response","length","responseCount","takeCoinsPerPage","number","names"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CoinBlock from '../../Components/ListPageComponents/CoinBlock';\r\nimport Header from '../../Components/ListPageComponents/Header';\r\nimport Pagination from '../../Components/ListPageComponents/Pagination';\r\n// import { sortCoins } from '../../utilities/sortCoins';\r\nimport Select from '../../Components/ListPageComponents/Select';\r\nimport getInfo from '../../API/api';\r\n\r\nfunction ListPage({ searchText }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [coinsPerPage, setCoinsPerPage] = useState(10);\r\n  const [currentCoins, setCurrentCoins] = useState([]);\r\n  const [totalCoins, setTotalCoins] = useState(2000);\r\n  const [time, setTime] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(200);\r\n  // const [sortedCoins, setSortedCoins] = useState([]);\r\n  // const [sortName, setSortName] = useState('');\r\n  // const [cryptocurrency, setCryptocurrency] = useState([]);\r\n\r\n  const pagination = (pageNamber) => setCurrentPage(pageNamber);\r\n\r\n  // const sort = (name) => setSortName(name);\r\n\r\n  useEffect(() => {\r\n    const update = () => {\r\n      setTime((prevTime) => prevTime + 1);\r\n      setTimeout(update, 10000);\r\n    };\r\n    update();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalCoins / coinsPerPage));\r\n  }, [totalCoins, coinsPerPage]);\r\n\r\n  useEffect(() => {\r\n    const getCoins = async () => {\r\n      const firstCoinsIndex = (currentPage * coinsPerPage) - coinsPerPage;\r\n      let response;\r\n      if (searchText.length !== 0) {\r\n        const responseCount = await getInfo(`?search=${searchText}&limit=2000`);\r\n        response = await getInfo(`?offset=${firstCoinsIndex}&limit=${coinsPerPage}&search=${searchText}`);\r\n        setTotalCoins(responseCount.length);\r\n      } else {\r\n        response = await getInfo(`?offset=${firstCoinsIndex}&limit=${coinsPerPage}`);\r\n        setTotalCoins(2000);\r\n      }\r\n      setCurrentCoins(response);\r\n    };\r\n    getCoins();\r\n  }, [coinsPerPage, time, currentPage, searchText]);\r\n\r\n  const takeCoinsPerPage = (number) => setCoinsPerPage(number);\r\n\r\n  const names = [10, 12, 15, 17, 20];\r\n\r\n  // useEffect(() => {\r\n  //   if (searchText.length !== 0) return;\r\n  //   setSortedCoins(sortCoins(sortName, cryptocurrency));\r\n  // }, [sortName, searchText, cryptocurrency]);\r\n\r\n  return (\r\n    <div className=\"list-page\">\r\n      <Select func={takeCoinsPerPage} names={names} />\r\n      <Header />\r\n      <CoinBlock coins={currentCoins} />\r\n      <Pagination totalPages={totalPages} pagination={pagination} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ListPage;\r\n"]},"metadata":{},"sourceType":"module"}